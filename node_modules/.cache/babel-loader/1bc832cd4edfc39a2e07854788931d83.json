{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._options = options;\n  }\n\n  _fetch(personalMethod, options) {\n    return fetch(this._options.baseUrl + personalMethod, {\n      headers: this._options.headers,\n      ...options\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getUserInfo() {\n    return this._fetch('/users/me');\n  }\n\n  getInitialCards() {\n    return this._fetch('/cards');\n  }\n\n  updateUserInfo(data) {\n    return this._fetch('/users/me', {\n      method: 'PATCH',\n      body: JSON.stringify(data)\n    });\n  }\n\n  addNewCard(data) {\n    return this._fetch('/cards', {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n  }\n\n  deleteCard(cardId) {\n    return this._fetch(`/cards/${cardId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  setLike(cardId) {\n    return this._fetch(`/cards/likes/${cardId}`, {\n      method: 'PUT'\n    });\n  }\n\n  deleteLike(cardId) {\n    return this._fetch(`/cards/likes/${cardId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  changeAvatar(data) {\n    return this._fetch('/users/me/avatar', {\n      method: 'PATCH',\n      body: JSON.stringify(data)\n    });\n  }\n\n}\n\nexport default new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-28',\n  headers: {\n    authorization: 'b1cd0dc5-2b23-4623-93d8-d89ffc3baa40',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/valentinakarpova/Desktop/projects/mesto-react/mesto-react/src/utils/Api.js"],"names":["Api","constructor","options","_options","_fetch","personalMethod","fetch","baseUrl","headers","then","res","ok","json","Promise","reject","status","getUserInfo","getInitialCards","updateUserInfo","data","method","body","JSON","stringify","addNewCard","deleteCard","cardId","setLike","deleteLike","changeAvatar","authorization"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACNC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,QAAL,GAAgBD,OAAhB;AACD;;AAEDE,EAAAA,MAAM,CAACC,cAAD,EAAiBH,OAAjB,EAA0B;AAC5B,WAAOI,KAAK,CAAC,KAAKH,QAAL,CAAcI,OAAd,GAAwBF,cAAzB,EAAyC;AACjDG,MAAAA,OAAO,EAAE,KAAKL,QAAL,CAAcK,OAD0B;AAEjD,SAAGN;AAF8C,KAAzC,CAAL,CAINO,IAJM,CAIAC,GAAD,IAAS;AACX,UAAGA,GAAG,CAACC,EAAP,EAAW;AACP,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,KATM,CAAP;AAUH;;AAEDC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKZ,MAAL,CAAY,WAAZ,CAAP;AACH;;AAEDa,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKb,MAAL,CAAY,QAAZ,CAAP;AACD;;AAEDc,EAAAA,cAAc,CAACC,IAAD,EAAO;AACjB,WAAO,KAAKf,MAAL,CAAY,WAAZ,EAAyB;AAC5BgB,MAAAA,MAAM,EAAE,OADoB;AAE5BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAFsB,KAAzB,CAAP;AAIH;;AAEDK,EAAAA,UAAU,CAACL,IAAD,EAAO;AACb,WAAO,KAAKf,MAAL,CAAY,QAAZ,EAAsB;AACzBgB,MAAAA,MAAM,EAAE,MADiB;AAEzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAFmB,KAAtB,CAAP;AAIH;;AAEDM,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,WAAO,KAAKtB,MAAL,CAAa,UAASsB,MAAO,EAA7B,EAAgC;AACnCN,MAAAA,MAAM,EAAE;AAD2B,KAAhC,CAAP;AAGH;;AAEDO,EAAAA,OAAO,CAACD,MAAD,EAAS;AACZ,WAAO,KAAKtB,MAAL,CAAa,gBAAesB,MAAO,EAAnC,EAAsC;AACzCN,MAAAA,MAAM,EAAE;AADiC,KAAtC,CAAP;AAGH;;AAEDQ,EAAAA,UAAU,CAACF,MAAD,EAAS;AACf,WAAO,KAAKtB,MAAL,CAAa,gBAAesB,MAAO,EAAnC,EAAsC;AACzCN,MAAAA,MAAM,EAAE;AADiC,KAAtC,CAAP;AAGH;;AAEDS,EAAAA,YAAY,CAACV,IAAD,EAAO;AACf,WAAO,KAAKf,MAAL,CAAY,kBAAZ,EAAgC;AACnCgB,MAAAA,MAAM,EAAE,OAD2B;AAEnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAF6B,KAAhC,CAAP;AAIH;;AA/DK;;AAmER,eAAe,IAAInB,GAAJ,CAAQ;AACrBO,EAAAA,OAAO,EAAE,6CADY;AAErBC,EAAAA,OAAO,EAAE;AACPsB,IAAAA,aAAa,EAAE,sCADR;AAEP,oBAAgB;AAFT;AAFY,CAAR,CAAf","sourcesContent":["class Api {\n    constructor(options) {\n      this._options = options;\n    }\n\n    _fetch(personalMethod, options) {\n        return fetch(this._options.baseUrl + personalMethod, {\n            headers: this._options.headers,\n            ...options\n        }) \n        .then((res) => {\n            if(res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }) \n    }\n\n    getUserInfo() {\n        return this._fetch('/users/me');\n    }\n  \n    getInitialCards() {\n      return this._fetch('/cards');\n    }\n\n    updateUserInfo(data) {\n        return this._fetch('/users/me', {\n            method: 'PATCH',\n            body: JSON.stringify(data)\n        });\n    }\n\n    addNewCard(data) {\n        return this._fetch('/cards', {\n            method: 'POST',\n            body: JSON.stringify(data)\n        });  \n    }\n\n    deleteCard(cardId) {\n        return this._fetch(`/cards/${cardId}`, {\n            method: 'DELETE'\n        });\n    }\n\n    setLike(cardId) {\n        return this._fetch(`/cards/likes/${cardId}`, {\n            method: 'PUT'\n        });\n    }\n\n    deleteLike(cardId) {\n        return this._fetch(`/cards/likes/${cardId}`, {\n            method: 'DELETE'\n        });\n    }\n\n    changeAvatar(data) {\n        return this._fetch('/users/me/avatar', {\n            method: 'PATCH',\n            body: JSON.stringify(data)\n        });\n    }\n  }\n  \n\n  export default new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-28',\n    headers: {\n      authorization: 'b1cd0dc5-2b23-4623-93d8-d89ffc3baa40',\n      'Content-Type': 'application/json'\n    }\n  }); \n\n"]},"metadata":{},"sourceType":"module"}